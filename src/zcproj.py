#!usr/bin/python
#coding=utf-8

import tweecore
from tweecore import DoAuth, UserObj, SearchUser, Status
import boto3
import json
import decimal
import time
from datetime import datetime

# Must config the Access Keys & Region first
# Configure the Access Keys
followlst1= [698412371170045952,22967466,4897578143,603437170,700901280344989697,3885786254,2472849300,4892620387,27801694,4861612214,701029582669873152,2368993820,4855803119,2200056272,4809368352,700987054184763392,4880494648,4854927994,4689103638,2455539632,4612821416,4329788488,1967035405,4897944839,4799479826,103809718,247232426,701949565595996160,4915238342,4899962162,4918708031,4889766919,4903125111,4901283187,4917316024,4916081832,4919200514,523894587,4897107370,4890778886,2727896068,1948179344,701327368800116738,697801383513161728,2485702367,4889878279,3649171098,343973538,4925819162,4654048939,401148895,144131243,698752968233869313,4845058399,700927103882043393,4891427814,4548274952,302748777,4901000778,2775930269,3146371322,4791610848,2237479292,2184535050,1514874163,4768549154,4925893650,701291144626446336,2775539274,4787302592,1679115115,3123630980,4851683415,4902053966,4807047006,2402470915,605217970,701058269784113152,701408799169630208,2805155538,4840641446,698693070213091329,2998086907,4885970280,3759647835,701006476207382528,4913929021,4787243070,4916520810,1075779937,697649075915771904,1970800813,996656424,4901557933,490152612,4473717973,2835462313,4915022960,4866806098,4904896715,4798197794,2791933067,4866069243,412330216,4755733092,4454565674,701197732606640129,2489504116,622092888,594447009,3855906852,3697697189,701424013587775490,4622782403,3139053464,4816941074,702288155546775553,4921210934,700622746229694465,701736669825794048,1395790920,4892096318,701077020399128576,4904001836,697844719573831680,2868435732,4921002792,4916888449,4914322082,4915890530,4901215628,701019342947938304,699221757627146241,4896933201,116628833,3925350132,701389396818403333,4898324741,4833963267,700258761630330880,701447426033451008,59724145,4798879604,699775375006543872,214795494,700942246460297217,3823654993,4556389039,4918135489,4916437154,517568659,4902278941,3229450520,4904408329,4668346484,262658759,701668764044034048,37435412,1934979720,4776081080,2839196486,4890557420,701112777658621952,4918964263,4803055033,700982405717340160,702027783447285760,701299766777393158,4926206017,3874945392,4904897308,1558673472,89363681,3887976913,701830478899220481,700877846282113024,4900772978,4907628686,701178910914940928,4365522793,33460318,42801964,700956352747671552,701003971469529089,3169394389,2562580527,701446633549012992,4904809570,701027619815477248,699570714718765057,4755785916,1715186870,4887083193,476974171,4883121552,2926036725,4719095286,4750603596,4923157852,4897697260,701323565048573953,4907491674,4608394694,1563488059,4920458953,3432419679,700917532790693888,698856235970359296,52957908,701178976492982272,981757549,4899813416,4891617613,2204446303,2994675116,4885643826,4903866617,14191112,1079464351,700901679684685825,4887236316,3310260026,33457583,701267014698954752,446611701,4921942879,4681225790,420153976,4441675094,365626509,4896998619,4901671172,4916769979,4882027893,2520534019,4579231222,203829129,4866124551,254894752,4919891613,4542688094]
SeedLst = [203829129,45358339]
class InitDynamoDB():
	def __init__(self,tables):
		dynamodb = boto3.resource('dynamodb')
		self.tb = dynamodb.Table(tables)
	def putdata(self,data):
		# if type(data) == str:
		# 	itemdata = self._serialization(json.loads(data))
		# elif type(data) == dict:
		# 	itemdata = self._serialization(data)
		# else:
		# 	return -1
		self.tb.put_item(Item=self._serialization(data))

	def _serialization(self,mapdata):
		tmpmap = {}
		jdump = json.dumps(mapdata)
		if "" in jdump:
			jdump = jdump.replace('""',"null")
		elif '' in jdump:
			jdump = jdump.replace("''","null")
		mapdata = json.loads(jdump, parse_float=decimal.Decimal)
		for k,v in mapdata.items():
			if v == "":
				tmpmap[k] = None
			elif isinstance(v, float):
				tmpmap[k] = str(v)
			else:
				tmpmap[k] = v
		print tmpmap,"\n\n\n"
		return tmpmap


# class GetuserwithSid():
# 	def __init__(self):
# 		pass

def dosync_twee():
	tbusr = InitDynamoDB("TweeUsers")
	tbstat = InitDynamoDB("Tweestatus")
	tbrel = InitDynamoDB("TweeRel")
	
	doauth = DoAuth()
	auth = doauth.doauth()
	api  = doauth.doapi(auth)

	for seedusr in SeedLst:
		user = UserObj(api,seedusr)
		uinfo = user.get_user_info()

		uinfo["seed"] = True
		tbusr.putdata(uinfo)
	
		

		if seedusr == 203829129:
			pass
		else:
			procstatus(tbstat,api,seedusr)

		for pagedata in user.get_followers_page():
			for item in pagedata:
				if item['id'] in followlst1:
					pass
				else:
					try:
						item["seed"] = False
						tbusr.putdata(item)
						procstatus(tbstat,api,item["id"])
					except Exception, e:
						print Exception,e
						continue
		
		for pagedata in user.get_friends_page():
			for item in pagedata:
				try:
					item["seed"] = False
					tbusr.putdata(item)
					procstatus(tbstat,api,item["id"])
				except Exception, e:
					print Exception,e
					continue

		tbrel.putdata(user.show_relids())


def procstatus(table,api,uid):
	status = Status(api,uid)
	for statuspage in status.get_status_page():
			for item in statuspage:
				# print item
				item["userid"] = uid
				#Wed Feb 24 13:15:59 +0000 2016
				try:
					if "created_at" in item:
						if item["created_at"] != None or item["created_at"] != "":
							timestr = item["created_at"]
							dt = datetime.strptime(timestr, '%a %b %d %X +0000 %Y')
							ts = int(time.mktime(dt.timetuple()))
							item["created_at_ts"] = ts
					table.putdata(item)
				except Exception, e:
					print Exception,e
					continue
				



if __name__ == '__main__':
	dosync_twee()


	# tbusr.putdata(mydic)
	# tb = InitDynamoDB("Music")
	# myd = {"fdsa":"fdsa","id":312,"Artist":"fdsfads","SongTitle":"fdsafds"}
	# tb.putdata(myd)